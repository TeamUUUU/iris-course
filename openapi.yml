openapi: "3.0.3"
servers:
  - url: http://localhost:9098/bmstuapi
info:
  version: 1.0.0
  title: Forms Consctructor API
paths:
  /users:
    put:
      operationId: "createUser"
      requestBody:
        description: Create User
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        "200":
          description: Created User Object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
    get:
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
      responses:
        "200":
          description: User Object with Email
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"

            

  /users/{user_id}/forms:
    parameters:
      - $ref: '#/components/parameters/UserID'
    put:
      operationId: "createForm"
      requestBody:
        description: Create form
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/FormCreate"
      responses:
        "200":
          description: Created Form Object
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Form"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralError"
    get:
      operationId: "getForms"
      responses:
        "200":
          description: Forms created by current user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Forms"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralError"

  /forms:
    get:
      parameters:
        - in: query
          name: link
          required: true
          schema:
            type: string
      operationId: "getFormByLink"
      responses:
        "200":
          description: "From description by unique link"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Form"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralError"

  /forms/{form_id}:
    get:
      parameters:
        - in: path
          name: form_id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: "Form"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Form'

  /forms/{form_id}/fields:
    get:
      operationId: "getFormFields"
      parameters:
        - name: form_id
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: "Fields of specified form"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Fields"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralError"

  /forms/{form_id}/submissions:
    get:    
      operationId: "getFormSubmissions"
      parameters:
        - name: form_id
          required: true
          in: path
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: "Submissions of specified form"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Submissions"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GeneralError"
    put:
      operationId: "createFormSubmission"
      parameters:
        - name: form_id
          required: true
          in: path
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SubmissionCreate"
      responses:
        "200":
          description: "Submissions of specified form"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Submission"
components:
  schemas:
    GeneralError:
      type: object
      properties:
        error:
          type: string
    
    UserCreate:
      properties:
        email:
          type: string
        
    User:
      properties:
        id:
          type: integer
          format: int64
        email:
          type: string

    Field:
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        subtitle:
          type: string
        position:
          type: integer
        form_id:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - "number"
            - "text"
            - "flag"

    FieldCreate:
      type: object
      properties:
        title:
          type: string
        subtitle:
          type: string
        position:
          type: integer
        form_id:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - "number"
            - "text"
            - "flag"

    TextRecord:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          enum:
            - "text"
        value:
          type: string
        field_id:
          type: integer

    FlagRecord:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          enum:
            - "flag"
        value:
          type: boolean
        field_id:
          type: integer

    NumberRecord:
      type: object
      properties:
        id:
          type: integer
        type:
          type: string
          enum:
            - "number"
        value:
          type: number
        field_id:
          type: integer

    TextRecordCreate:
      type: object
      properties:
        value:
          type: string
        field_id:
          type: integer

    NumberRecordCreate:
      type: object
      properties:
        id:
          type: integer
        value:
          type: number
        field_id:
          type: integer

    FlagRecordCreate:
      type: object
      properties:
        value:
          type: boolean
        field_id:
          type: integer

    SubmissionCreate:
      type: object
      properties:
        date:
          type: string
          format: date-time
        records:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/FlagRecordCreate"
              - $ref: "#/components/schemas/TextRecordCreate"
              - $ref: "#/components/schemas/NumberRecordCreate"
        form_id:
          type: integer
          format: int64

    Submission:
      type: object
      properties:
        id:
          type: integer
          format: int64
        date:
          type: string
          format: date-time
        records:
          type: array
          items:
            oneOf:
              - $ref: "#/components/schemas/FlagRecord"
              - $ref: "#/components/schemas/TextRecord"
              - $ref: "#/components/schemas/NumberRecord"
        form_id:
          type: integer
          format: int64

    Submissions:
      type: object 
      properties:
        items:
          $ref: "#/components/schemas/Submission"

    Form:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        subtitle:
          type: string
        available_from:
          type: integer 
          format: int64
        available_to:
          type: integer 
          format: int64
        json_schema:
          type: string
        link:
          type: string

    FormCreate:
      type: object
      properties:
        title:
          type: string
        subtitle:
          type: string
        available_from:
          type: integer 
          format: int64
        available_to:
          type: integer 
          format: int64
        json_schema:
          type: string
        fields:
          type: array
          items:
            $ref: "#/components/schemas/FieldCreate"

    Forms:
      type: object
      properties:
        forms:
          type: array
          items:
            $ref: "#/components/schemas/Form"

    Fields:
      type: object
      properties:
        fields:
          type: array
          items:
            $ref: "#/components/schemas/Field"

  parameters:
    UserID:
      name: user_id 
      required: true
      in: path
      schema:
        type: integer
        format: int64
